var RuleEngine = require('node-rules');
var FactUtility = require('./sample_fact.json');
var Rules = require('./rules_cpu.js');

var fs = require('fs')
//fs.writeFile('./test.json', 'abcd',{
//                  flag: 'a'
//               });

/*//fs.mkdirSync('data', 0755);
fs.open('data/test.json', 'w', 0644, function(e, fd){
   if(e) throw e;
   fs.write(fd, "first fs!", 0, 'utf8', function(e){
      if(e) throw e;
      fs.closeSync(fd);
   })
});
*/

require('shelljs/global');

if (!which('git')) {
  echo('Sorry, this script requires git');
  exit(1);
}

/*fs.writeFile('./test.json', 'abcd',{
      flag: 'a'
   },function(err){
       if(err) throw err;
       console.log('----------Done!-----')
});*/

// Copy files to release dir
cd('../../VisualEsxtopOnline/server/static/data');
var res = ls('*.json');
for(var i=0;i<res.length;i++){
   /*fs.writeFile('./test.json', 'abcd',{
      flag: 'a'
   },function(err){
       if(err) throw err;
       console.log('----------Done!-----')
});*/
   fs.writeFile('./test.txt', '\nsycn-- '+(new Date()-0), {
    flag: 'a'
});
 
}

for(var i = 0; i < res.length; i++){
   //require('shelljs/global');
   //'a'.toEnd('./test.json');
   var file = res[i];
   var file_name = res[i].replace('.json','');
   if(file_name === "cpu" || file_name === "sample")
      continue;
   var path = '../../VisualEsxtopOnline/server/static/data/';
   var file_data = require('./' + path + file);
   var str = JSON.stringify(file_data);
   var keys = Object.keys(file_data);
   var pointStart = file_data["pointStart"];
   var data = file_data["data"];
   var pointInterval = file_data["pointInterval"];
   var dataLength = file_data["dataLength"];

   var str = JSON.stringify(file_data);
   var keys = Object.keys(file_data);
   var pointStart = file_data["pointStart"];
   var data = file_data["data"];
   var pointInterval = file_data["pointInterval"];
   var dataLength = file_data["dataLength"];
   var facts = new Array();
   for(var j = 0; j < dataLength; j++){
      var time = pointStart + pointInterval * j;
      console.log(pointStart);
      facts[j] = '{"type":"cpu' + '","name":"' + file_name + '","time":"' + time + '","useage":"' + data[j] + '"}';
      facts[j] = JSON.parse(facts[j]);
//      console.log(facts[j]);
   }
      console.log('---------------');

   //define the rules
   var rules =  Rules.rules;
   //initailize the rule engine
   var R = new RuleEngine(rules);

   // decode the json to get array of each item
   for(var i=0; i < dataLength/20; i++){
      var keys = Object.keys(facts[i])
      console.log(keys);
      //get the fact value of each item
      switch(facts[i][keys[0]]){
         case "cpu":
            //Now pass the fact on the rule engine for result
            facts[i][keys[2]] = parseInt(facts[i][keys[2]])/100;
            //require('shelljs/global');
            //var data = facts[i][keys[2]];
            //'a'.toEnd('./test.json');
            R.execute(facts[i], function(result){
               console.log("The recived para is cpu");
               if(result.result == 1){
                  console.log(result);
                  console.log(result.reason);
               }
               else{
                  console.log(result);
                  console.log(result.reason);
               }

            });
          break;
      }

   }

}
